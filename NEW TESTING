import csv
import mysql.connector
import os
import progressbar
from guessit import guessit
from imdbpie import Imdb
# Connecting to Database
def connect_to_sql():
    conn = mysql.connector.connect(user='root', password='',
                                   host='127.0.0.1',
                                   database='movie_database')
    return conn


# Tables (Suhad)
# Create the table structure
def create_tables(cursor, table):
cursor.execute('''CREATE MOVIE TABLE  PRIMARY KEY auto_increment, 
    Movie_Title varchar(10), 
    IMDB_Ratings varchar(100), 
    Genres varcher(100),
    Release_Date DATE, 
    Cast varchar(100), 
    return


# Source for code used: https://github.com/varundhall/my-IMDB-collection/blob/master/create-collection.py
# Create CSV file for storing the movies data
if os.path.isfile("list.csv"):
    os.remove("list.csv")

# Read all movie names in current directory and their immediate directories (upto one level down) - only reading folder names right now

raw_movie_names = []
print("Reading your local directory for movies\n")
immediate_directories = [name for name in os.listdir(".") if os.path.isdir(name)]
raw_movie_names.extend(immediate_directories)
for each_directory in immediate_directories:
    raw_movie_names.extend(
        [name for name in os.listdir(each_directory) if os.path.isdir(os.path.join(each_directory, name))])

# Remove duplicates (if any)
raw_movie_names = list(set(raw_movie_names))
clean_movie_names = []
for name in raw_movie_names:
    clean_movie_names.append(str((guessit(name)).get('title')))
    
# Remove duplicates (if any)
clean_movie_names = list(set(clean_movie_names))
print("Found : " + str(len(clean_movie_names)) + " movies in your collection\n")
print("Please wait...we are fetching limited data from IMDB\n")
print("Sit back and relax...we are working on your collection\n")

# Use Progressbar to tell user about the progress
bar = progressbar.ProgressBar(maxval=len(clean_movie_names),
                              widgets=[progressbar.Bar('=', '[', ']'), ' ', progressbar.Percentage()])

bar.start()
i = 0

# Get IMDB ratings for each movie
f = open('list.csv', 'wt')
writer = csv.writer(f)
writer.writerow(('Movie Title', 'IMDB Ratings', 'No. of Votes', 'Genres', 'Release Date', 'Cast', 'Director', 'Writer',
                 'Plot Outline'))
f.close()
bar.finish()
print("We have consolidated the data.\nGo ahead and check list.csv")


class Movies(object):
    pass
class time(object):
    pass
def create_tables(cursor, param):
    pass
def main():
    # Connect to SQL and get cursor
    conn = connect_to_sql()
    cursor = conn.cursor()
    create_tables(cursor, "table")
    # Load text file and store arguments into dictionary
    arg_dict = 0
    while (1):
        Movies(arg_dict, cursor)
        time.sleep(3600)
        # Sleep for 1h



